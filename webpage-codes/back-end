require("dotenv").config();
const express = require("express");
const cors = require("cors");
const { Pool } = require("pg");

const app = express();
app.use(cors());
app.use(express.json());

// PostgreSQL bağlantısı
const pool = new Pool({
  user: "postgres",          
  host: "localhost",
  database: "waste_db",      
  password: "3906",          
  port: 5432,
});

// Bağlantı testi
pool.query('SELECT NOW()', (err, res) => {
  if (err) {
    console.error('❌ Bağlantı hatası:', err);
  } else {
    console.log('✅ Bağlantı başarılı! Şu anki zaman:', res.rows[0].now);
  }
});

// 📌 1️⃣ Veritabanından tüm verileri getir
app.get("/api/waste", async (req, res) => {
  try {
    const result = await pool.query("SELECT * FROM waste_items ORDER BY timestamp DESC LIMIT 100");
    res.json(result.rows);
  } catch (err) {
    console.error("❌ Veri çekme hatası:", err.message);
    res.status(500).send("Veritabanı hatası");
  }
});

// 📌 2️⃣ Yeni atık verisini veritabanına kaydet
app.post("/api/waste", async (req, res) => {
  const { track_id, global_id, class: wasteClass, timestamp } = req.body;

  try {
    const result = await pool.query(
      "INSERT INTO waste_items (track_id, global_id, class, timestamp) VALUES ($1, $2, $3, $4) RETURNING *",
      [track_id, global_id, wasteClass, timestamp]
    );
    console.log("✅ Yeni veri eklendi:", result.rows[0]);
    res.json({ message: "Veri kaydedildi!", data: result.rows[0] });
  } catch (err) {
    console.error("❌ Veri ekleme hatası:", err.message);
    res.status(500).send("Veritabanı hatası");
  }
});


// Sunucuyu başlat
app.listen(5000, () => {
  console.log("🚀 Backend çalışıyor: http://localhost:5000");
});
